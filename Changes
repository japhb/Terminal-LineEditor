Revision history for Terminal-LineEditor

{{$NEXT}}

0.0.18  2025-01-17T06:59:58-08:00
  [Dependencies]
  - Update dependency on Terminal::MakeRaw to 1.0.1+ to ensure Mac users don't
    end up with a buggy version of that dependency.


0.0.17  2024-10-18T17:04:27-07:00
  [Dependencies]
  - Replace Term::termios dependency with Terminal::MakeRaw, which doesn't
    require a C compiler to install.


0.0.16  2023-08-20T15:09:35-07:00
  [Packaging]
  - Require exactly Term::termios:ver<0.2> to avoid bugs later in 0.2.x series.


0.0.15  2023-06-11T21:16:35-07:00
  [Compatibility]
  - Support automatic selection of scroll markers based on requested symbol-set

  [Packaging]
  - Add dependency on Terminal::Capabilities
  - Make dependency specifications more precise


0.0.14  2023-06-11T17:48:28-07:00
  [Compatibility]
  - Replace Unicode 7.0 scroll markers with Unicode 1.1 markers for terminal
    compatibility improvement at the cost of minor vertical misalignment

  [Packaging]
  - Disable CI on older Rakudos due to `prove6` incompatibility


0.0.13  2022-07-23T16:31:17-07:00
  [Bug fix]
  - Remove now-dead code that just caused GC churn


0.0.12  2022-07-16T20:13:26-07:00
  [Bug fix]
  - Switch to Terminal::ANSIParser 0.0.3 and use its new codepoint semantics
    to fix https://github.com/japhb/Terminal-LineEditor/issues/3

  [Functionality]
  - Support ShiftTab, which has a special encoding and must be supported as
    a SpecialKey rather than as Ctrl-Shift-I


0.0.11  2022-03-17T13:41:59-07:00
  [Bug fix]
  - Add Delete to the default keymap


0.0.10  2022-01-13T16:00:32-08:00
  [Docs]
  - Sketch out a simple todo doc

  [Functionality]
  - Support mouse input decoding
  - Provide RawTerminalIO.set-mouse-event-mode method

  [Packaging]
  - Switch release method to `mi6 release` with UploadToZef

  [Performance]
  - Optimize CSI decoding, especially for unmodified special-keys

  [Refactoring]
  - Improve subclassability of CLIInput


0.0.9  2021-11-08
  [Functionality]
  - Support Linenoise-style tab completion (tab rotates through options)


0.0.8  2021-11-08
  [Bug fix]
  - Make sure history-start and history-end are mappable as special actions

  [Docs]
  - Expand and update README considerably


0.0.7  2021-11-07
  [Bug fix]
  - Fix hang on Alt-<cursor key>; moon-child++ for noticing this


0.0.6  2021-11-07
  [Functionality]
  - Support char and word recasing edit methods, binding word variants for
    uppercase, lowercase, and tclc (title case followed by lowercase)
  - Implement and bind swap-words

  [Refactoring]
  - Simplify cursor position/terminal size detection (patrickb++ for noticing
    that refactoring had left more complex code than needed)
  - Extend word-start/end helpers for repeated use or use at arbitrary buffer
    positions


0.0.5  2021-11-06
  [Incompatible Changes]
  - Rename move-back/forward edit actions to move-char-back/forward to make
    namespace room for word variants; this will be invisible unless you have
    been binding these actions to new keys manually

  [Functionality]
  - Support (and bind) history-start/end and move-word-back/forward
  - Bind Alt-d to delete-word-forward (previously supported but unbound)

  [Refactoring]
  - Refactor word boundary seeks in SingleLineTextInput to allow many more
    word-based edit methods
  - Factor KeyMappable.decode-keyname out of CLIInput.read-input


0.0.4  2021-11-06
  [Bug Fixes]
  - Unbreak runtime require of Terminal::LineEditor::RawTerminalInput

  [Functionality]
  - Support mapping Alt-[normal key], though none mapped yet
  - Add support for load/save history in a history file

  [Refactoring]
  - Split the Terminal::LineEditor::HistoryTracking role out to its own module


0.0.3  2021-11-03
  [Docs]
  - Add TYPICAL USE subsection to SYNOPSIS

  [Functionality]
  - Support mapping arbitrary special keys
  - Map cursor keys, in addition to previously supported C0 control keys

  [Refactoring]
  - Rebase input stream parsing on Terminal::ANSIParser


0.0.2  2021-10-23
  [Docs]
  - Expand/improve README

  [Functionality]
  - Support basic input history add/prev/next

  [Refactoring]
  - Major refactoring of RawTerminalInput module, including factoring out
    Terminal::LineEditor::ScrollingSingleLineInput::ANSI class


0.0.1  2021-10-18
  - Initial version, first green build
